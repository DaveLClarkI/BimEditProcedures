      * uppercase identifiers and punctuation must be coded as shown.
      * lowercase identifiers indicate that user text needs to be coded.
      * < > are used to indicate that the enclosed identifiers are optional.
      *  |  is used to separate mutually exclusive alternatives.
      * { } encloses a set of alternatives, one of which must be coded.
      * ... denotes the preceding identifier(s) may be coded repetitively.
      *
           EXEC CICS INQUIRE NETNAME(8-character data-value)
      *                                Examine TCT information
                   < START | NEXT | END >
                   < TERMINAL(4-character data-area) >
                   < REMOTESYSTEM(4-character data-area) >
                   < MODENAME(8-character data-area) >
                   < TRANSACTION(4-character data-area) >
                   < TERMPRIORITY(fullword binary data-area) >
                   < USERAREA(31-bit pointer) >
                   < USERAREALEN(halfword binary data-area) >
                   < OPERID(3-character data-area) >
                   < USERID(8-character data-area) >
                   < SPOOLTO(8-character data-area) >
                   < SPOOLDEST(8-character data-area) >
                   < DEVICE(cvda) >
                   < TERMMODEL(halfword binary data-area) >
                   < ACCESSMETHOD(cvda) >
                   < CREATESESS(cvda) >
                   < ACQSTATUS(cvda) >
                   < SERVSTATUS(cvda) >
                   < ATISTATUS(cvda) >
                   < TTISTATUS(cvda) >
                   < PAGESTATUS(cvda) >
                   < SCREENHEIGHT(halfword binary data-area) >
                   < SCREENWIDTH(halfword binary data-area) >
                   < GCHARS(halfword binary data-area) >
                   < GCODES(halfword binary data-area) >
                   < NOHANDLE | RESP(data-area) RESP2(data-area) >
           END-EXEC
      *
      * Conditions:  TERMIDERR, END, ILLOGIC
      *
           IF  EIBRESP NOT = DFHRESP(NORMAL) THEN
               ...etc...
           END-IF
      *
