;"MODEL" PROC INSERTS PREDEFINED FORMATS INTO THE CURRENT SESSION
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*  No warranty is expressed or implied.     Written by Dave L Clark *
;*  Neither the author nor the company is    Clarke Industries, Inc. *
;*  responsible for any loss or damage       2100 Highway 265        *
;*  resulting from the use of this code.     Springdale, AR  72764   *
;*  Source is provided on an as-is basis.    Phone (501)750-8248     *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
SET PPDVBL 1
SET PPDSCRSZ D

IF SIBSESSD,EQ,0
   EXIT SV,'(MODEL   ) ** COMMAND REQUIRES AN UPDATEABLE SESSION **'
IF SSDTYPE,EQ,EE
   GOTO EXECUTE
IF SSDTYPE,EQ,ED
   GOTO EXECUTE
IF MMPDSCTL,EQ,0
   EXIT SV,'(MODEL   ) ** COMMAND REQUIRES AN UPDATEABLE SESSION **'
IF SSDTYPE,NE,DI
   EXIT SV,'(MODEL   ) ** COMMAND REQUIRES AN UPDATEABLE SESSION **'

LABEL EXECUTE

DCL MODEL CHAR 16 V
DCL RC    CHAR  2 V
DCL MSG   CHAR 82 V
DCL SVLIB    CHAR  16 V
DCL SVMEM    CHAR  16 V
SETD SVLIB TXMLIB
SETD SVMEM TXMMEM

DCL CLASS CHAR  8 V U GLOBAL
DCL NAME  CHAR 10 V U GLOBAL
DCL QUAL1 CHAR 11 V U GLOBAL
DCL QUAL2 CHAR 10 V U GLOBAL
DCL MESG  CHAR 79 V M GLOBAL

LABEL EXECUTE
PARSE CLASS NAME QUAL1 QUAL2
IF CLASS,NE,''
   GOTO CHECK
;
;                  Process CLASS options
;
LABEL CLASS
IF SIBSECCM,EQ,4
   GOTO SYSTEMS
MAPF
}MODEL                       ¬Model CLASS Options                      }&OPSDATE
                                                                       }&OPSTIME
¬CLASS ===>!CLASS   }


¬  ASI     }-  ASI's ATTACHE utility command formats
¬  GOAL    }-  GOAL Systems' utility programs and parameter card formats


¬  COBOL   }-  COBOL/VSE statement formats
¬  CICS    }-  CICS/DOS/VS "EXEC CICS" statement formats
¬  DLI     }-  CICS/DOS/VS "EXEC DLI" statement formats


¬  IDCAMS  }-  VSE/VSAM IDCAMS command formats
¬  JCL     }-  VSE/SP Job Control Statement formats
¬  LIBR    }-  VSE/SP Librarian command formats





}Press¬PF3}to terminate the MODEL procedure.
¬&MESG
++/*
GOTO CHECK

LABEL SYSTEMS
MAPF
}MODEL                       ¬Model CLASS Options                      }&OPSDATE
                                                                       }&OPSTIME
¬CLASS ===>!CLASS   }


¬  ASI     }-  ASI's ATTACHE utility command formats
¬  GOAL    }-  GOAL Systems' utility programs and parameter card formats


¬  COBOL   }-  COBOL/VSE statement formats
¬  CICS    }-  CICS/DOS/VS "EXEC CICS" statement formats
¬  DLI     }-  CICS/DOS/VS "EXEC DLI" statement formats
¬  SYS     }-  CICS/DOS/VS "EXEC CICS" statement formats for Systems' use


¬  IDCAMS  }-  VSE/VSAM IDCAMS command formats
¬  JCL     }-  VSE/SP Job Control Statement formats
¬  LIBR    }-  VSE/SP Librarian command formats




}Press¬PF3}to terminate the MODEL procedure.
¬&MESG
++/*

LABEL CHECK
SET PPDALARM 0
SET MESG ''

IF PPDKEY,EQ,PF4
   GOTO EXIT
IF PPDKEY,EQ,PF16
   GOTO EXIT

IF PPDKEY,EQ,PF3
   GOTO EXIT
IF PPDKEY,EQ,PF15
   GOTO EXIT

IF CLASS,EQ,COBOL
   GOTO MODEL
IF CLASS,EQ,CICS
   GOTO MODEL
IF CLASS,EQ,SYS
   GOTO MODEL
IF CLASS,EQ,DLI
   GOTO MODEL

IF CLASS,EQ,IDCAMS
   GOTO MODEL
IF CLASS,EQ,JCL
   GOTO MODEL
IF CLASS,EQ,LIBR
   GOTO MODEL

IF CLASS,EQ,ASI
   GOTO MODEL
IF CLASS,EQ,GOAL
   GOTO MODEL

SET MESG 'Class is invalid, select one of the classes shown...'
SET PPDALARM 1
GOTO -CLASS
;
;                  Process MODEL variable
;
LABEL MODEL
IF NAME,EQ,''
   GOTO EXECPROC
SET MODEL '&CLASS.-&NAME.-&QUAL1.-&QUAL2.' 1 16
IF QUAL2,NE,''
   GOTO TSTMODEL
SET MODEL '&CLASS.-&NAME.-&QUAL1.' 1 16
IF QUAL1,NE,''
   GOTO TSTMODEL
SET MODEL '&CLASS.-&NAME.' 1 16

LABEL TSTMODEL
VTRUNCAT MODEL
AUTH ON
SET PPDCOND 1
READ $SIT.MODEL.&MODEL
SETD MSG SIBRESP
SET PPDCOND 0
AUTH OFF
SETD RC MSG 1 2
SETD MSG MSG 3
IF RC,EQ,OK
   GOTO PROCESS
SET PPDCOND 2
READ &SVLIB..&SVMEM
SET PPDCOND 0
SET MODEL ''
SET MESG '&MSG'

LABEL EXECPROC
EXEC $SIT.PROC.MODEL-&CLASS
SETD MSG SIBRESP
SETD RC MSG 1 2
SETD MSG MSG 3
IF MSG,EQ,P3
   GOTO -CLASS
IF MSG,EQ,P4
   GOTO EXIT
GOTO -MODEL
;
;                  Insert MODEL contents
;
LABEL PROCESS
SET PPDINCL 2
AUTH ON
INSERTF
/INCL $SIT.MODEL.&MODEL
++/*
UP &TXMSZLN
SET PPDCOND 2
READ &SVLIB..&SVMEM
SET PPDCOND 0
AUTH OFF
;
;                  End of Procedure
;
LABEL EXIT
IF MODEL,EQ,''
   EXIT OK,'## MODEL procedure terminated due to user request ##'
EXIT OK,'## Model "&MODEL" inserted after current line ##'
