      * uppercase identifiers and punctuation must be coded as shown.
      * lowercase identifiers indicate that user text must be coded.
 < >  * brackets indicate that the enclosed identifiers are optional.
  |   * a vertical bar separates mutually exclusive alternatives.
 { }  * braces enclose a set of alternatives, one of which is required.
 ...  * an elipsis denotes identifier(s) that may be coded repetitively.
      *
           MOVE FUNCTION function-name < (argument(s)) >
                                       TO identifier-1.
      *

    Note that functions which return a numeric value can also be used
    in COMPUTE statements (e.g.).  See the IBM COBOL for VSE ESA
    Language Reference for a complete list of instrinsic functions.

    Selected character functions:
        CHAR(nnn)   returns the character at the given (1 to 256)
                    ordinal position in the collating sequence;
        ORD('c')    returns the ordinal position number of a given,
                    single character in the collating sequence;
        LOWER-CASE(argument-1)
                    returns the lower-case translation of the
                    argument string;
        UPPER-CASE(argument-1)
                    returns the upper-case translation of the
                    argument string;
        REVERSE(argument-1)
                    returns the argument string in its exact, char-
                    acter-for-character reversed order;

    Selected date functions:
        CURRENT-DATE returns up to 21 characters representing the
                    full and current date, time, and time zone
                    (see the CURRDATE or DATETIME copybooks);
        DATE-OF-INTEGER(argument-1)
                    returns the Gregorian CCYYMMDD date equivalent
                    for a given positive integer that represents a
                    number of days since December 31, 1600;
        DAY-OF-INTEGER(argument-1)
                    returns the Julian CCYYDDD date equivalent for
                    a given positive integer that represents a
                    number of days since December 31, 1600;
        INTEGER-OF-DATE(argument-1)
                    returns a positive integer that represents the
                    number of days since December 31, 1600 for the
                    given Gregorian CCYYMMDD date;
        INTEGER-OF-DAY(argument-1)
                    returns a positive integer that represents the
                    number of days since December 31, 1600 for the
                    given Julian CCYYDDD date;

    Selected number functions:
        INTEGER(argument-1)
                    returns the greatest, integer value less than
                    or equal to the given argument
                    (i.e., +2.1 returns +2 but -2.1 returns -3);
        INTEGER-PART(argument-1)
                    returns the unrounded, integer portion of the
                    given argument -- regardless
                    (i.e., +2.9 returns +2 and -2.9 returns -2);
        NUMVAL(argument-1)
        NUMVAL-C(argument-1 < argument-2 > )
                    returns the numeric value represented by the
                    alphanumeric argument string specified (strip-
                    ping away any and all spaces and any commas
                    regardless of format or alphabetic characters
                    that may be found; where, NUMVAL-C is for
                    currency values);
        MOD(argument-1 argument-2)
                    returns an integer value that is equal to
                    argument-1 modulo argument-2;
        REM(argument-1 argument-2)
                    returns a numeric value that is the remainder
                    of argument-1 divided by argument-2;
        SUM(argument-1 ... )
                    returns the sum of the given arguments;

